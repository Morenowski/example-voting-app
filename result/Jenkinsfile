pipeline{

agent none

    stages{
        stage('Build'){
            agent{
              docker{
                image 'node:8.16.0-alpine'
              }
            }
            when{
             changeset "**/result/**"
            }
            steps{
                echo 'Compiling result app'
                dir('result'){
                  sh 'npm install'
                }
            }
        }
        stage('test'){
            agent{
              docker{
                image 'node:8.16.0-alpine'
              }
            }
            when{
              changeset "**/result/**"
            }
            steps{
                echo 'Running Unit Test on result app'
                dir('result'){
                  sh 'npm test'
                }
            }
        }
        stage('worker-package'){
            agent any
            when{
              changeset "**/result/**"
              branch 'master'
            }
            steps{
              echo 'Packaging result app with docker '
              script{
                docker.withRegistry('https://index.result.io/v1/', 'dockerlogin') {
                    def workerImage = docker.build("morenowski/result:v${env.BUILD_ID}", "./result")
                    workerImage.push()
                    workerImage.push("${env.BRANCH_NAME}"")
                }
              }
            }
        }
    }

    post{

        always {
            echo 'Build pipeline for result app is complete...'
        }
        failure{
           slackSend (channel: "instavote-cd", message: "Build Failed - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)")
        }
        success{
           slackSend (channel: "instavote-cd", message: "Build Succeeded - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)")
        }
    }
}
